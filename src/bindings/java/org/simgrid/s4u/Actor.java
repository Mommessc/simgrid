/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.2.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.simgrid.s4u;

public class Actor {
  /**
   * this is the method you should implement in your actor (it's the main of your actor).
   * @todo: make this abstract
   */
  public void run() { /* your code here */ }

  protected Actor(String name, Host host)
  {
    swigCPtr        = simgridJNI.Actor_create(name, Host.getCPtr(host), host);
    swigCMemOwnBase = true;
  }
  public Actor start()
  {
    simgridJNI.Actor_start(swigCPtr, this);
    return this;
  }

  /* Internal method executing your code, and catching the actor-killing exception */
  public void do_run()
  {
    try {
      run();
    } catch (org.simgrid.s4u.ForcefulKillException e) {
      /* Actor killed, this is fine. */
    }
  }

  private transient long swigCPtr;
  private transient boolean swigCMemOwnBase;

  protected Actor(long cPtr, boolean cMemoryOwn) {
    swigCMemOwnBase = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Actor obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings({"deprecation", "removal"})
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if(swigCPtr != 0 && swigCMemOwnBase) {
      swigCMemOwnBase = false;
      simgridJNI.delete_Actor(swigCPtr);
    }
    swigCPtr = 0;
  }

  public static Actor self() {
    long cPtr = simgridJNI.Actor_self();
    return (cPtr == 0) ? null : new Actor(cPtr, true);
  }

  public void on_this_suspend_cb(SWIGTYPE_p_std__functionT_void_fsimgrid__s4u__Actor_const_RF_t cb) {
    simgridJNI.Actor_on_this_suspend_cb(swigCPtr, this, SWIGTYPE_p_std__functionT_void_fsimgrid__s4u__Actor_const_RF_t.getCPtr(cb));
  }

  public void on_this_resume_cb(SWIGTYPE_p_std__functionT_void_fsimgrid__s4u__Actor_const_RF_t cb) {
    simgridJNI.Actor_on_this_resume_cb(swigCPtr, this, SWIGTYPE_p_std__functionT_void_fsimgrid__s4u__Actor_const_RF_t.getCPtr(cb));
  }

  public void on_this_sleep_cb(SWIGTYPE_p_std__functionT_void_fsimgrid__s4u__Actor_const_RF_t cb) {
    simgridJNI.Actor_on_this_sleep_cb(swigCPtr, this, SWIGTYPE_p_std__functionT_void_fsimgrid__s4u__Actor_const_RF_t.getCPtr(cb));
  }

  public void on_this_wake_up_cb(SWIGTYPE_p_std__functionT_void_fsimgrid__s4u__Actor_const_RF_t cb) {
    simgridJNI.Actor_on_this_wake_up_cb(swigCPtr, this, SWIGTYPE_p_std__functionT_void_fsimgrid__s4u__Actor_const_RF_t.getCPtr(cb));
  }

  public void on_this_host_change_cb(SWIGTYPE_p_std__functionT_void_fsimgrid__s4u__Actor_const_R_Host_const_RF_t cb) {
    simgridJNI.Actor_on_this_host_change_cb(swigCPtr, this, SWIGTYPE_p_std__functionT_void_fsimgrid__s4u__Actor_const_R_Host_const_RF_t.getCPtr(cb));
  }

  public static void on_termination_cb(SWIGTYPE_p_std__functionT_void_fsimgrid__s4u__Actor_const_RF_t cb) {
    simgridJNI.Actor_on_termination_cb(SWIGTYPE_p_std__functionT_void_fsimgrid__s4u__Actor_const_RF_t.getCPtr(cb));
  }

  public void on_this_termination_cb(SWIGTYPE_p_std__functionT_void_fsimgrid__s4u__Actor_const_RF_t cb) {
    simgridJNI.Actor_on_this_termination_cb(swigCPtr, this, SWIGTYPE_p_std__functionT_void_fsimgrid__s4u__Actor_const_RF_t.getCPtr(cb));
  }

  public static void on_destruction_cb(SWIGTYPE_p_std__functionT_void_fsimgrid__s4u__Actor_const_RF_t cb) {
    simgridJNI.Actor_on_destruction_cb(SWIGTYPE_p_std__functionT_void_fsimgrid__s4u__Actor_const_RF_t.getCPtr(cb));
  }

  public void on_this_destruction_cb(SWIGTYPE_p_std__functionT_void_fsimgrid__s4u__Actor_const_RF_t cb) {
    simgridJNI.Actor_on_this_destruction_cb(swigCPtr, this, SWIGTYPE_p_std__functionT_void_fsimgrid__s4u__Actor_const_RF_t.getCPtr(cb));
  }

  public static Actor init(String name, Host host) {
    long cPtr = simgridJNI.Actor_init(name, Host.getCPtr(host), host);
    return (cPtr == 0) ? null : new Actor(cPtr, true);
  }

  public Actor daemonize() {
    simgridJNI.Actor_daemonize(swigCPtr, this);
    return this;
  }

  public boolean is_daemon() {
    return simgridJNI.Actor_is_daemon(swigCPtr, this);
  }

  public String get_name() {
    return simgridJNI.Actor_get_name(swigCPtr, this);
  }

  public Host get_host() {
    long cPtr = simgridJNI.Actor_get_host(swigCPtr, this);
    return (cPtr == 0) ? null : new Host(cPtr, true);
  }

  public int get_pid() {
    return simgridJNI.Actor_get_pid(swigCPtr, this);
  }

  public int get_ppid() {
    return simgridJNI.Actor_get_ppid(swigCPtr, this);
  }

  public void suspend() {
    simgridJNI.Actor_suspend(swigCPtr, this);
  }

  public void resume() {
    simgridJNI.Actor_resume(swigCPtr, this);
  }

  public boolean is_suspended() {
    return simgridJNI.Actor_is_suspended(swigCPtr, this);
  }

  public Actor set_auto_restart(boolean autorestart) {
    simgridJNI.Actor_set_auto_restart(swigCPtr, this, autorestart);
    return this;
  }

  public Actor set_auto_restart() {
    simgridJNI.Actor_set_auto_restart(swigCPtr, this, true);
    return this;
  }

  public int get_restart_count() {
    return simgridJNI.Actor_get_restart_count(swigCPtr, this);
  }

  public void on_exit(SWIGTYPE_p_std__functionT_void_fboolF_t fun) {
    simgridJNI.Actor_on_exit(swigCPtr, this, SWIGTYPE_p_std__functionT_void_fboolF_t.getCPtr(fun));
  }

  public void set_kill_time(double time) {
    simgridJNI.Actor_set_kill_time(swigCPtr, this, time);
  }

  public double get_kill_time() {
    return simgridJNI.Actor_get_kill_time(swigCPtr, this);
  }

  public void set_host(Host new_host) {
    simgridJNI.Actor_set_host(swigCPtr, this, Host.getCPtr(new_host), new_host);
  }

  public void kill() {
    simgridJNI.Actor_kill(swigCPtr, this);
  }

  public static Actor by_pid(int pid) {
    long cPtr = simgridJNI.Actor_by_pid(pid);
    return (cPtr == 0) ? null : new Actor(cPtr, true);
  }

  public void join() {
    simgridJNI.Actor_join__SWIG_0(swigCPtr, this);
  }

  public void join(double timeout) {
    simgridJNI.Actor_join__SWIG_1(swigCPtr, this, timeout);
  }

  public Actor restart() {
    long cPtr = simgridJNI.Actor_restart(swigCPtr, this);
    return (cPtr == 0) ? null : new Actor(cPtr, true);
  }

  public static void kill_all() {
    simgridJNI.Actor_kill_all();
  }

  public String get_property(String key) {
    return simgridJNI.Actor_get_property(swigCPtr, this, key);
  }

  public void set_property(String key, String value) {
    simgridJNI.Actor_set_property(swigCPtr, this, key, value);
  }
  public void sleep_for(double duration) { simgridJNI.ActorMain_sleep_for(swigCPtr, this, duration); }

  public void sleep_until(double wakeup_time) { simgridJNI.ActorMain_sleep_until(swigCPtr, this, wakeup_time); }

  public void execute(double flop) { simgridJNI.ActorMain_execute__SWIG_0(swigCPtr, this, flop); }

  public void execute(double flop, double priority)
  {
    simgridJNI.ActorMain_execute__SWIG_1(swigCPtr, this, flop, priority);
  }

  public void thread_execute(SWIGTYPE_p_s4u__Host host, double flop_amounts, int thread_count)
  {
    simgridJNI.ActorMain_thread_execute(swigCPtr, this, SWIGTYPE_p_s4u__Host.getCPtr(host), flop_amounts, thread_count);
  }

  public Exec exec_init(double flops_amounts)
  {
    return new Exec(simgridJNI.ActorMain_exec_init(swigCPtr, this, flops_amounts), true);
  }

  public Exec exec_async(double flops_amounts)
  {
    return new Exec(simgridJNI.ActorMain_exec_async(swigCPtr, this, flops_amounts), true);
  }

  public void set_host(SWIGTYPE_p_s4u__Host new_host)
  {
    simgridJNI.ActorMain_set_host(swigCPtr, this, SWIGTYPE_p_s4u__Host.getCPtr(new_host));
  }

  public void yield() { simgridJNI.ActorMain_yield(swigCPtr, this); }

  public void exit() { simgridJNI.ActorMain_exit(swigCPtr, this); }

  public static void on_termination_cb(ActorCallback code)
  {
    simgridJNI.ActorMain_on_termination_cb(ActorCallback.getCPtr(code), code);
  }

  public static void on_destruction_cb(ActorCallback code)
  {
    simgridJNI.ActorMain_on_destruction_cb(ActorCallback.getCPtr(code), code);
  }

  public void on_exit(BooleanCallback code)
  {
    simgridJNI.ActorMain_on_exit(swigCPtr, this, BooleanCallback.getCPtr(code), code);
  }
}
