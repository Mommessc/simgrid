/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.2.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.simgrid.s4u;

public class Io extends Activity {
  private transient long swigCPtr;
  private transient boolean swigCMemOwnDerived;

  protected Io(long cPtr, boolean cMemoryOwn) {
    super(cPtr, true);
    swigCMemOwnDerived = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Io obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings({"deprecation", "removal"})
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if(swigCPtr != 0 && swigCMemOwnDerived) {
      swigCMemOwnDerived = false;
      simgridJNI.delete_Io(swigCPtr);
    }
    swigCPtr = 0;
    super.delete();
  }

  public static Io init() {
    long cPtr = simgridJNI.Io_init();
    return (cPtr == 0) ? null : new Io(cPtr, true);
  }

  public double get_remaining() {
    return simgridJNI.Io_get_remaining(swigCPtr, this);
  }

  public int get_performed_ioops() {
    return simgridJNI.Io_get_performed_ioops(swigCPtr, this);
  }

  public Io set_disk(Disk disk) {
    long cPtr = simgridJNI.Io_set_disk(swigCPtr, this, Disk.getCPtr(disk), disk);
    return (cPtr == 0) ? null : new Io(cPtr, true);
  }

  public Io set_priority(double priority) {
    long cPtr = simgridJNI.Io_set_priority(swigCPtr, this, priority);
    return (cPtr == 0) ? null : new Io(cPtr, true);
  }

  public Io set_size(int size) {
    long cPtr = simgridJNI.Io_set_size(swigCPtr, this, size);
    return (cPtr == 0) ? null : new Io(cPtr, true);
  }

  public Io set_op_type(Io.OpType type) {
    long cPtr = simgridJNI.Io_set_op_type(swigCPtr, this, type.swigValue());
    return (cPtr == 0) ? null : new Io(cPtr, true);
  }

  public static Io streamto_init(Host from, Disk from_disk, Host to, Disk to_disk) {
    long cPtr = simgridJNI.Io_streamto_init(Host.getCPtr(from), from, Disk.getCPtr(from_disk), from_disk, Host.getCPtr(to), to, Disk.getCPtr(to_disk), to_disk);
    return (cPtr == 0) ? null : new Io(cPtr, true);
  }

  public static Io streamto_async(Host from, Disk from_disk, Host to, Disk to_disk, long simulated_size_in_bytes) {
    long cPtr = simgridJNI.Io_streamto_async(Host.getCPtr(from), from, Disk.getCPtr(from_disk), from_disk, Host.getCPtr(to), to, Disk.getCPtr(to_disk), to_disk, simulated_size_in_bytes);
    return (cPtr == 0) ? null : new Io(cPtr, true);
  }

  public static void streamto(Host from, Disk from_disk, Host to, Disk to_disk, long simulated_size_in_bytes) {
    simgridJNI.Io_streamto(Host.getCPtr(from), from, Disk.getCPtr(from_disk), from_disk, Host.getCPtr(to), to, Disk.getCPtr(to_disk), to_disk, simulated_size_in_bytes);
  }

  public Io set_source(Host from, Disk from_disk) {
    long cPtr = simgridJNI.Io_set_source(swigCPtr, this, Host.getCPtr(from), from, Disk.getCPtr(from_disk), from_disk);
    return (cPtr == 0) ? null : new Io(cPtr, true);
  }

  public Io set_destination(Host to, Disk to_disk) {
    long cPtr = simgridJNI.Io_set_destination(swigCPtr, this, Host.getCPtr(to), to, Disk.getCPtr(to_disk), to_disk);
    return (cPtr == 0) ? null : new Io(cPtr, true);
  }

  public Io update_priority(double priority) {
    long cPtr = simgridJNI.Io_update_priority(swigCPtr, this, priority);
    return (cPtr == 0) ? null : new Io(cPtr, true);
  }

  public boolean is_assigned() {
    return simgridJNI.Io_is_assigned(swigCPtr, this);
  }

  public static void on_start_cb(SWIGTYPE_p_std__functionT_void_fsimgrid__s4u__Io_const_RF_t cb) {
    simgridJNI.Io_on_start_cb(SWIGTYPE_p_std__functionT_void_fsimgrid__s4u__Io_const_RF_t.getCPtr(cb));
  }

  public void on_this_start_cb(SWIGTYPE_p_std__functionT_void_fsimgrid__s4u__Io_const_RF_t cb) {
    simgridJNI.Io_on_this_start_cb(swigCPtr, this, SWIGTYPE_p_std__functionT_void_fsimgrid__s4u__Io_const_RF_t.getCPtr(cb));
  }

  public static void on_completion_cb(SWIGTYPE_p_std__functionT_void_fsimgrid__s4u__Io_const_RF_t cb) {
    simgridJNI.Io_on_completion_cb(SWIGTYPE_p_std__functionT_void_fsimgrid__s4u__Io_const_RF_t.getCPtr(cb));
  }

  public void on_this_completion_cb(SWIGTYPE_p_std__functionT_void_fsimgrid__s4u__Io_const_RF_t cb) {
    simgridJNI.Io_on_this_completion_cb(swigCPtr, this, SWIGTYPE_p_std__functionT_void_fsimgrid__s4u__Io_const_RF_t.getCPtr(cb));
  }

  public void on_this_suspend_cb(SWIGTYPE_p_std__functionT_void_fsimgrid__s4u__Io_const_RF_t cb) {
    simgridJNI.Io_on_this_suspend_cb(swigCPtr, this, SWIGTYPE_p_std__functionT_void_fsimgrid__s4u__Io_const_RF_t.getCPtr(cb));
  }

  public void on_this_resume_cb(SWIGTYPE_p_std__functionT_void_fsimgrid__s4u__Io_const_RF_t cb) {
    simgridJNI.Io_on_this_resume_cb(swigCPtr, this, SWIGTYPE_p_std__functionT_void_fsimgrid__s4u__Io_const_RF_t.getCPtr(cb));
  }

  public static void on_veto_cb(SWIGTYPE_p_std__functionT_void_fsimgrid__s4u__Io_RF_t cb) {
    simgridJNI.Io_on_veto_cb(SWIGTYPE_p_std__functionT_void_fsimgrid__s4u__Io_RF_t.getCPtr(cb));
  }

  public void on_this_veto_cb(SWIGTYPE_p_std__functionT_void_fsimgrid__s4u__Io_RF_t cb) {
    simgridJNI.Io_on_this_veto_cb(swigCPtr, this, SWIGTYPE_p_std__functionT_void_fsimgrid__s4u__Io_RF_t.getCPtr(cb));
  }

  public Io add_successor(Activity a) {
    simgridJNI.Io_add_successor(swigCPtr, this, Activity.getCPtr(a), a);
    return this;
  }

  public Io remove_successor(Activity a) {
    simgridJNI.Io_remove_successor(swigCPtr, this, Activity.getCPtr(a), a);
    return this;
  }

  public Io set_name(String name) {
    simgridJNI.Io_set_name(swigCPtr, this, name);
    return this;
  }

  public String get_name() {
    return simgridJNI.Io_get_name(swigCPtr, this);
  }

  public Io set_tracing_category(String category) {
    simgridJNI.Io_set_tracing_category(swigCPtr, this, category);
    return this;
  }

  public String get_tracing_category() {
    return simgridJNI.Io_get_tracing_category(swigCPtr, this);
  }

  public SWIGTYPE_p_std__functionT_void_fvoid_pF_t get_clean_function() {
    return new SWIGTYPE_p_std__functionT_void_fvoid_pF_t(simgridJNI.Io_get_clean_function(swigCPtr, this), false);
  }

  public Io detach() {
    simgridJNI.Io_detach__SWIG_0(swigCPtr, this);
    return this;
  }

  public Io detach(SWIGTYPE_p_std__functionT_void_fvoid_pF_t clean_function) {
    simgridJNI.Io_detach__SWIG_1(swigCPtr, this, SWIGTYPE_p_std__functionT_void_fvoid_pF_t.getCPtr(clean_function));
    return this;
  }

  public Io cancel() {
    simgridJNI.Io_cancel(swigCPtr, this);
    return this;
  }

  public Io await_for(double timeout)
  {
    simgridJNI.Io_await_for(swigCPtr, this, timeout);
    return this;
  }

  public final static class OpType {
    public final static Io.OpType READ = new Io.OpType("READ");
    public final static Io.OpType WRITE = new Io.OpType("WRITE");

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static OpType swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + OpType.class + " with value " + swigValue);
    }

    private OpType(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private OpType(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private OpType(String swigName, OpType swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static OpType[] swigValues = { READ, WRITE };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

}
