/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.2.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.simgrid.s4u;

public class ConditionVariable {
  private transient long swigCPtr;
  private transient boolean swigCMemOwnBase;

  protected ConditionVariable(long cPtr, boolean cMemoryOwn) {
    swigCMemOwnBase = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(ConditionVariable obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings({"deprecation", "removal"})
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if(swigCPtr != 0 && swigCMemOwnBase) {
      swigCMemOwnBase = false;
      simgridJNI.delete_ConditionVariable(swigCPtr);
    }
    swigCPtr = 0;
  }

  public static ConditionVariable create() {
    long cPtr = simgridJNI.ConditionVariable_create();
    return (cPtr == 0) ? null : new ConditionVariable(cPtr, true);
  }

  public SWIGTYPE_p_std__cv_status wait_until(SWIGTYPE_p_std__unique_lockT_simgrid__s4u__Mutex_t lock, double timeout_time) {
    return new SWIGTYPE_p_std__cv_status(simgridJNI.ConditionVariable_wait_until(swigCPtr, this, SWIGTYPE_p_std__unique_lockT_simgrid__s4u__Mutex_t.getCPtr(lock), timeout_time), true);
  }

  public SWIGTYPE_p_std__cv_status wait_for(SWIGTYPE_p_std__unique_lockT_simgrid__s4u__Mutex_t lock, double duration) {
    return new SWIGTYPE_p_std__cv_status(simgridJNI.ConditionVariable_wait_for(swigCPtr, this, SWIGTYPE_p_std__unique_lockT_simgrid__s4u__Mutex_t.getCPtr(lock), duration), true);
  }

  public void notify_one() {
    simgridJNI.ConditionVariable_notify_one(swigCPtr, this);
  }

  public void notify_all() {
    simgridJNI.ConditionVariable_notify_all(swigCPtr, this);
  }

}
